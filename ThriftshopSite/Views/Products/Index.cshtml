@model IEnumerable<ThriftshopSite.Models.Product>
@{
    ViewData["Title"] = "Index";
    var test = Model;
    var list = new List<string>();
    var listSelectedCategories = new List<Category>();
    IEnumerable<ThriftshopSite.Models.Category> listCategories = ViewData["Categories"] as IEnumerable<ThriftshopSite.Models.Category>;
}

<h1>Index</h1>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<style>
.dropbtn {
  background-color: #04AA6D;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

.dropdown-content a:hover {background-color: #ddd;}

.dropdown:hover .dropdown-content {display: block;}

.dropdown:hover .dropbtn {background-color: #3e8e41;}
</style>


<div class="dropdown">
  <button class="dropbtn">Dropdown</button>
  <div class="dropdown-content">
        @foreach (Category p in listCategories)
        {
   <a id="buttonForm" onclick="say('@p.Name')" type="button">@p.Name</a>
        }
  </div>
</div>
<p>
    <a asp-action="Create">Create New</a>
   <a asp-action="Search">update</a>
       <button id="buttonForm" type="button">update</button>

</p>
   <button id="buttonForm" onclick="getList()" type="button">getlist</button>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inventory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Inventory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                <a asp-controller="Products" asp-action="Add" asp-route-id="@item.Id">Add</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="col-lg-12 col-md-12 col-xs-12" id="divPartial">
    @Html.Partial("_partialtest", test)
    @foreach (string s in list){
       <a>@s</a>

}
</div>

<button id="buttonForm" onclick="myFunction()" type="button">update</button>

<p id="demo"></p>
<ul id="myList">
    
</ul>
<script>
function myFunction(){
      $('#divPartial').load('/Products/Search'); 
}
function clikcdropdown() {
      $('#divPartial').load('/Products/Search'); 

}


function say(category) {
       // $('#divPartial').load('/Products/Search1/', { name: category });
        $("ul").append('<li onclick="DeleteById(\'' + category + '\')" id=' +category+ '>' + category + '</li>');
          document.getElementById(category).click();
        getList();
}

$(function() {

// Output the list
$("#myList").on("click", "li", function() {
    console.log("test");
    DeleteById($(this).attr("id"));
    getList();
});
});



// Example function to remove elements by ID
function DeleteById(elementId) {
    console.log(elementId);
    const element = document.getElementById(elementId);
    console.log(element);
    //if (element) {
    element.remove();
    getList();

}
function getList() {

    // Get the <ul> element by its ID
    const ulElement = document.getElementById('myList'); // Assuming the <ul> element has the ID "myList"

    // Get all <li> elements within the <ul> element
    const liElements = ulElement.getElementsByTagName('li');

    // Create an array to store the list items  
    const itemList = [];

    // Iterate over the <li> elements and add their text content to the array
    for (let i = 0; i < liElements.length; i++) {
        itemList.push(liElements[i].textContent);
    }
    console.log(itemList);
    var serializedList = JSON.stringify(itemList);
    var queryString = '?categoriesJson=' + encodeURIComponent(serializedList);
    $('#divPartial').load('/Products/FilterByMultiple/' + queryString);


    return itemList
}
</script>
